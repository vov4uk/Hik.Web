@page
@model HikWeb.Pages.IndexModel

@{
    ViewData["Title"] = "Index";
}

<table class="table">

    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Jobs[0].JobType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Jobs[0].Started)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Jobs[0].Finished)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Jobs[0].PeriodStart)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Jobs[0].PeriodEnd)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Jobs[0].FailsCount)
            </th> 
            <th>
                @Html.DisplayNameFor(model => model.Jobs[0].PhotosCount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Jobs[0].VideosCount)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Jobs)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.JobType)
                </td>
                <td>
                    @{
                        string relativeDate = IndexModel.GetRelativeTime(item.Started);
                    }
                    <p title="@item.Started">@Html.DisplayFor(modelItem => @relativeDate)</p>
                </td>
                <td>
                    @{
                        string relativeFinishedDate = item.Finished != null ? IndexModel.GetRelativeTime(item.Finished.Value) : "";
                    }
                    <p title="@item.Finished">@Html.DisplayFor(modelItem => relativeFinishedDate)</p>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PeriodStart)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PeriodEnd)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FailsCount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhotosCount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VideosCount)
                </td>
                <td>
                    <a asp-page="./Details" asp-route-id="@item.Id">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- pager -->
@if (Model.Pager.Pages.Any())
{
    <nav class="table-responsive">
        <ul class="pagination justify-content-center d-flex flex-wrap">
            @if (Model.Pager.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="/">First</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="/?p=@(Model.Pager.CurrentPage - 1)">Previous</a>
                </li>
            }

            @foreach (var p in Model.Pager.Pages)
            {
                <li class="page-item @(p == Model.Pager.CurrentPage ? "active" : "")">
                    <a class="page-link" href="/?p=@p">@p</a>
                </li>
            }

            @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="/?p=@(Model.Pager.CurrentPage + 1)">Next</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="/?p=@(Model.Pager.TotalPages)">Last</a>
                </li>
            }
        </ul>
    </nav>
}