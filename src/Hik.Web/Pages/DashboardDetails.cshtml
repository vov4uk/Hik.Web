@page
@model Hik.Web.Pages.DashboardDetailsModel
@{ViewData["Title"] = Model.Dto.JobTriggerName;}

<div class="row">
    <div class="card-body text-center">
        <h2 class="card-title">@Model.Dto.JobTriggerName</h2>
    </div>
</div>

<button onclick="javascript:history.back()">Go Back</button>
@if(Model.Dto != null && Model.Dto.Items.Any())
{
<table class="table table-bordered table-sm" aria-label="Statistic">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Dto.Items.First().Period)</th>
            <th>@Html.DisplayNameFor(model => model.Dto.Items.First().FilesCount)</th>
            <th>@Html.DisplayNameFor(model => model.Dto.Items.First().FilesSize)</th>
            <th>@Html.DisplayNameFor(model => model.Dto.Items.First().TotalDuration)</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Dto.Items)
        {
            string size = Hik.Client.Helpers.Utils.FormatBytes(item.FilesSize);
            string dur = Hik.Client.Helpers.Utils.FormatSeconds((double)(item.TotalDuration ?? 0));

        <tr>
            <td>@Html.DisplayFor(modelItem => item.Period)</td>
            <td>@Html.DisplayFor(modelItem => item.FilesCount)</td>
            <td>@size</td>
            <td>@dur</td>
        </tr>
        }
    </tbody>
</table>
}

<!-- pager -->
@await Html.PartialAsync("_Pager.cshtml", Model.Pager)
