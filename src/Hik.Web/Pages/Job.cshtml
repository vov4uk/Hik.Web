@page
@using Hik.Client.Helpers
@model Hik.Web.Pages.JobModel
@{ViewData["Title"] = "Job";}

<button onclick="javascript:history.back()">Go Back</button>
@if (Model.Dto.Items != null && Model.Dto.Items.Any())
{
  <div class="row">
      <div class="card-body text-center">
          <h2 class="card-title">@Model.Dto.JobTriggerName</h2>
      </div>
  </div>

    <table class="table table-bordered table-striped" aria-label="Jobs">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(m => m.Dto.Items.First().Started)</th>
            <th>@Html.DisplayNameFor(m => m.Dto.Items.First().Finished)</th>
            <th>@Html.DisplayNameFor(m => m.Dto.Items.First().PeriodStart)</th>
            <th>@Html.DisplayNameFor(m => m.Dto.Items.First().PeriodEnd)</th>
            <th>@Html.DisplayNameFor(m => m.Dto.Items.First().FilesCount)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Dto.Items)
        {
            string relativeDate = item.Started.GetRelativeTime();
            string relativeFinishedDate = item.Finished.GetRelativeTime();
            var status = item.Success ? "" : "failed";
            <tr data-status="@status" class="failed">
            <td><span title="@item.Started">@relativeDate</span></td>
            <td><span title="@item.Finished">@relativeFinishedDate</span></td>
            <td>@Html.DisplayFor(m => item.PeriodStart)</td>
            <td>@Html.DisplayFor(m => item.PeriodEnd)</td>
            <td>@Html.DisplayFor(m => item.FilesCount)</td>
            <td><a asp-page="./JobDetails" asp-route-id="@item.Id">Details</a></td>
        </tr>
        }
    </tbody>
</table>
}

<!-- pager -->
@await Html.PartialAsync("_Pager.cshtml", Model.Pager)