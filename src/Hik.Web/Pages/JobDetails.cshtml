@page
@model Hik.Web.Pages.JobDetailsModel
@{ViewData["Title"] = "Details";}

<button onclick="javascript:history.back()">Go Back</button>
@if (Model.Dto.Job != null)
{
  <div class="row">
      <div class="card-body text-center">
            <h2 class="card-title"><a asp-page="./Job" asp-route-jobTriggerId="@Model.Dto.Job.JobTriggerId">@Model.Dto.Job.JobTrigger</a></h2>
      </div>
  </div>

<table class="table table-bordered table-sm" aria-label="Job">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(m => m.Dto.Job.Id)</th>
            <th>@Html.DisplayNameFor(m => m.Dto.Job.PeriodStart)</th>
            <th>@Html.DisplayNameFor(m => m.Dto.Job.PeriodEnd)</th>
            <th>@Html.DisplayNameFor(m => m.Dto.Job.Started)</th>
            <th>@Html.DisplayNameFor(m => m.Dto.Job.Finished)</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>@Html.DisplayFor(m => Model.Dto.Job.Id)</td>
            <td>@Html.DisplayFor(m => Model.Dto.Job.PeriodStart)</td>
            <td>@Html.DisplayFor(m => Model.Dto.Job.PeriodEnd)</td>
            <td>@Html.DisplayFor(m => Model.Dto.Job.Started)</td>
            <td>@Html.DisplayFor(m => Model.Dto.Job.Finished)</td>
        </tr>
    </tbody>
</table>
}

@if (Model.Dto.Job?.Error != null)
{
    <table class="table table-bordered table-sm" aria-label="Exceptions">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(m => m.Dto.Job.Error.Created)</th>
                <th>@Html.DisplayNameFor(m => m.Dto.Job.Error.HikErrorCode)</th>
                <th>@Html.DisplayNameFor(m => m.Dto.Job.Error.Message)</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@Html.DisplayFor(m => Model.Dto.Job.Error.Created)</td>
                <td>@Html.DisplayFor(m => Model.Dto.Job.Error.HikErrorCode)</td>
                <td>@Html.DisplayFor(m => Model.Dto.Job.Error.Message)</td>
            </tr>
        </tbody>
    </table>
}


@if (Model.Dto.Items != null && Model.Dto.Items.Any( x=> x.Path.EndsWith(".jpg")))
{
      <div class="row">
          @await Html.PartialAsync("_Photos.cshtml", Model.Dto.Items)
      </div>
}
else if (Model.Dto.Items != null && Model.Dto.Items.Any(x => x.Path.EndsWith(".mp4") || x.Path.EndsWith(".avi")))
{
    <div class="row">
        @await Html.PartialAsync("_Videos.cshtml", Model.Dto.Items)
     </div>
}
else if (Model.Dto.Items != null && Model.Dto.Items.Any())
{
    <div class="row">
        @await Html.PartialAsync("_Files.cshtml", Model.Dto.Items)
     </div>
}


  <div class="row">
      @await Html.PartialAsync("_Pager.cshtml", Model.Pager)
  </div>

@if (Model.Dto.Items != null && Model.Dto.Items.Any( x=> x.Path.EndsWith(".jpg")))
{
@section Scripts
{
    <script type="text/javascript">
        
      const list = document.querySelectorAll(".thumbnails .item img");

      const images = [...list].map((i) => {
          const { alt, name } = i;
          return { alt, name };
      });  

      // popup

      const popup = document.querySelector(".popup");
      const closeBtn = document.querySelector(".close-btn");
      const largeImage = document.querySelector(".large-image");
      const imageIndex = document.querySelector(".index");
      const leftArrow = document.querySelector(".left-arrow");
      const rightArrow = document.querySelector(".right-arrow");
      const imageName = document.querySelector(".image-name");

      document.onkeydown = checkKey;

      function checkKey(e) {
      
          e = e || window.event;
      
          if (e.keyCode == '37') { // <-
             if (index > 0) {
                updateImage(index - 1);
              }
          }
          else if (e.keyCode == '39') { // ->
            if (index < images.length - 1) {
                updateImage(index + 1);
              }
          }
          else if (e.keyCode == '27') { //esc
             popup.classList.remove("active");
          }
      }


      let index = 0; // will track our current image;

      list.forEach((item, i) => {
        item.addEventListener("click", (e) => {
          e.preventDefault();
          e.stopPropagation();
          updateImage(i);
          popup.classList.toggle("active");
        });
      });

      const updateImage = (i) => {
          let img = images[i];
          largeImage.src = img.alt;
          imageName.innerHTML = img.name;
          imageIndex.innerHTML = `0${i + 1}`;
          index = i;
      };

      closeBtn.addEventListener("click", () => {
        popup.classList.toggle("active");
      });

      leftArrow.addEventListener("click", () => {
        if (index > 0) {
          updateImage(index - 1);
        }
      });

      rightArrow.addEventListener("click", () => {
        if (index < images.length - 1) {
          updateImage(index + 1);
        }
      });
    </script>
}
}
