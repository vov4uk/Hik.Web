@page
@model Hik.Web.Pages.SchedulerModel
@{ViewData["Title"] = "Scheduler";}

<h3>@Model.ResponseMsg</h3>
<div class="container">

    @foreach (var row in Model.TriggersDTOs)
    {
        <div class="row">
            <div class="card-body text-center">
                <h4 class="card-title">@Html.DisplayFor(x => row.Key)</h4>
            </div>
        </div>
        <div class="row">
            @foreach (var item in row.Value)
            {
                string started = Hik.Client.Helpers.Utils.GetRelativeTime(item.ActivityStarted ?? item.LastJobStarted);
                string finished = Hik.Client.Helpers.Utils.GetRelativeTime(item.LastJobFinished);
                string lastSync = Hik.Client.Helpers.Utils.GetRelativeTime(item.LastSync);
                string from = Hik.Client.Helpers.Utils.GetRelativeTime(item.LastJobPeriodStart);
                string to = Hik.Client.Helpers.Utils.GetRelativeTime(item.LastJobPeriodEnd);
                string color = item.Success && item.ActivityId == null ? "text-white tri-success" : item.ActivityId == null ? "text-white tri-error" : "text-black tri-info";

            <div class="col-sm-12 col-md-6 col-lg-3 col-xl-3">
                <div class="card @color" style="margin-bottom: 10px;">
                    <div class="card-body text-center">
                        <h4 class="card-title"><a asp-page="./Index" asp-route-jobTriggerId="@item.JobTriggerId">@item.Name</a></h4>
                    </div>
                    <ul class=" ">
                        <li><span title="@item.CronSummary">@item.CronString</span></li>
                        <li>@Html.DisplayFor(x => item.Description)</li>
                        <li>Next - @Html.DisplayFor(x => item.Next)</li>
                        <li>@Html.DisplayFor(x => item.ConfigPath)</li>
                        <li><span title="@lastSync">Sync -  @Html.DisplayFor(x => item.LastSync)</span></li>
                        <li><span title="@from">From -  @Html.DisplayFor(x => item.LastJobPeriodStart)</span></li>
                        <li><span title="@to">To -    @Html.DisplayFor(x => item.LastJobPeriodEnd)</span></li>
                        <li>Files - @Html.DisplayFor(x => item.LastJobFilesCount)</li>
                        <li><a asp-page="./Details" asp-route-id="@item.JobId">Started - @started</a></li>
                        <li>Finished - @finished</li>
                    </ul>
                    <div class="card-body text-center">
                        <div>
                            @if (item.ActivityId == null)
                            {
                            <form method="POST">
                                <input type="submit" class="btn btn-primary" asp-page-handler="Run" asp-route-group="@item.Group" asp-route-name="@item.Name" value="Start" />
                            </form>
                            }
                            else {
                            <form method="POST">
                                <input type="submit" class="btn btn-primary" asp-page-handler="Kill" asp-route-activityId="@item.ActivityId" value="@item.ProcessId" />
                            </form>
                            }
                        </div>
                    </div>
                </div>
            </div>
            }
        </div>
    }
</div>   