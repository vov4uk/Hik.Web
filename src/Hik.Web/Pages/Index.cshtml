@page
@using Hik.Client.Helpers
@model Hik.Web.Pages.IndexModel
@{ViewData["Title"] = "Home";}

@if (!string.IsNullOrEmpty(@Model.ResponseMsg))
{
    <div class="row">
        <div class="card-body text-center">
            <h3>@Model.ResponseMsg</h3>
        </div>
    </div>
}
<div class="row">
    <div class="col-lg-12 my-3">
        <div class="pull-right">
            <div class="btn-group">
                <button id="cardsBtn" class="bootn" onclick="showCard()">Cards</button>
                <button id="tableBtn" class="bootn active" onclick="showTable()">Table</button>
            </div>
        </div>
    </div>
</div>

@await Html.PartialAsync("_Timer.cshtml")

<div class="container">
    @if(Model.TriggersDtos != null && Model.TriggersDtos.Any())
    {
      @foreach (var key in Model.TriggersDtos.Keys.OrderBy(x => x))
      {
          var jobTrigger = Model.TriggersDtos[key];
          <div class="row">
              <div class="card-body text-center">
                  <h4 class="card-title">@Html.DisplayFor(x => key)</h4>
              </div>
          </div>
          <div class="row">
                <table class="table table-striped table-bordered" aria-label="Triggers">
                  <thead>
                      <tr>
                          <th>Cron</th>
                          <th>Title</th>
                          <th>@Html.DisplayNameFor(m => jobTrigger.First().NextRun)</th>
                          <th>@Html.DisplayNameFor(m => jobTrigger.First().LastSync)</th>
                          <th>@Html.DisplayNameFor(m => jobTrigger.First().LastJob.PeriodStart)</th>
                          <th>@Html.DisplayNameFor(m => jobTrigger.First().LastJob.PeriodEnd)</th>
                          <th>@Html.DisplayNameFor(m => jobTrigger.First().LastJob.FilesCount)</th>
                          <th>Started</th>
                          <th>Finished</th>
                          <th></th>
                      </tr>
                  </thead>
                  <tbody>
                      @foreach (var job in jobTrigger.Where(x => x.LastJob != null))
                      {
                          string started = job.LastJob.Started.GetRelativeTime();
                          string finished = job.LastJob.Finished?.GetRelativeTime() ?? "N/A";
                          string lastSyncTooltip = job.LastSync.GetRelativeTime();
                          string fromTooltip = job.LastJob.PeriodStart?.GetRelativeTime() ?? "N/A";
                          string toTooltip = job.LastJob.PeriodEnd?.GetRelativeTime() ?? "N/A";
                          string status = job.LastJob.Success && job.ProcessId == null ? "" : job.ProcessId == null ? "failed" : "running";

                          <tr data-status="@status" class="failed">
                              <td><span title="@job.ExpressionString">@job.CronExpression</span></td>
                              <td><a asp-page="./Job" asp-route-jobTriggerId="@job.Id">@job.Name</a></td>
                              <td>@Html.DisplayFor(x => job.NextRun)</td>
                              <td><span title="@lastSyncTooltip">@job.LastSync.GetString()</span></td>
                              <td><span title="@fromTooltip">@Html.DisplayFor(x => job.LastJob.PeriodStart)</span></td>
                              <td><span title="@toTooltip">@Html.DisplayFor(x => job.LastJob.PeriodEnd)</span></td>
                              <td>@Html.DisplayFor(x => job.LastJob.FilesCount)</td>

                                @if (key == "ImagesCollectorJob")
                                {
                                    <td><a asp-page="./JobDetails" asp-route-id="@job.LastJob.Id" asp-route-pageSize="200">@started</a></td>
                                }
                                else
                                {
                                    <td><a asp-page="./JobDetails" asp-route-id="@job.LastJob.Id">@started</a></td>
                                }

                              <td>@finished</td>
                              <td>
                                  @if (job.ProcessId == null)
                                  {
                                      <form method="POST">
                                          <input type="submit" class="btn btn-primary" asp-page-handler="Run" asp-route-id="@job.Id" value="Start" />
                                      </form>
                                  }
                                  else
                                  {
                                      <form method="POST">
                                          <input type="submit" class="btn btn-primary-red" asp-page-handler="Kill" asp-route-activityId="@job.ToString()" value="@job.ProcessId" />
                                      </form>
                                  }
                              </td>
                          </tr>
                      }
                  </tbody>
              </table>

              @foreach (var job in jobTrigger.Where(x => x.LastJob != null))
              {
                  string started = job.LastJob.Started.GetRelativeTime();
                  string finished = job.LastJob.Finished.GetRelativeTime();
                  string lastSyncTooltip = job.LastSync.GetRelativeTime();
                  string fromTooltip = job.LastJob.PeriodStart.GetRelativeTime();
                  string toTooltip = job.LastJob.PeriodEnd.GetRelativeTime();
                  string statusColor = job.LastJob.Success && job.ProcessId == null ? "text-white tri-success card" : job.ProcessId == null ? "text-white tri-error card" : "text-black tri-info card";

                  <div class="col-sm-12 col-md-6 col-lg-3 col-xl-3">
                      <div class="@statusColor" style="margin-bottom: 10px;">
                          <div class="card-body text-center">
                              <h4 class="card-title"><a asp-page="./Job" asp-route-jobTriggerId="@job.Id">@job.Name</a></h4>
                          </div>
                          <ul class=" ">
                              <li><span title="@job.ExpressionString">@job.CronExpression</span></li>
                              <li>Next - @Html.DisplayFor(x => job.NextRun)</li>
                              <li><span title="@lastSyncTooltip">Sync -  @Html.DisplayFor(x => job.LastSync)</span></li>
                              <li><span title="@fromTooltip">From -  @Html.DisplayFor(x => job.LastJob.PeriodStart)</span></li>
                              <li><span title="@toTooltip">To -    @Html.DisplayFor(x => job.LastJob.PeriodEnd)</span></li>
                              <li>Files - @Html.DisplayFor(x => job.LastJob.FilesCount)</li>
                                @if (key == "ImagesCollectorJob")
                                {
                                    <li><a asp-page="./JobDetails" asp-route-id="@job.LastJob.Id" asp-route-pageSize="200">Started - @started</a></li>
                                }
                                else
                                {
                                    <li><a asp-page="./JobDetails" asp-route-id="@job.LastJob.Id">Started - @started</a></li>
                                }
                              <li>Finished - @finished</li>
                          </ul>
                          <div class="card-body text-center">
                              <div>
                                    @if (job.ProcessId == null)
                                    {
                                        <form method="POST">
                                            <input type="submit" class="btn btn-primary" asp-page-handler="Run" asp-route-id="@job.Id" value="Start" />
                                        </form>
                                    }
                                    else
                                    {
                                        <form method="POST">
                                            <input type="submit" class="btn btn-primary-red" asp-page-handler="Kill" asp-route-activityId="@job.ToString()" value="@job.ProcessId" />
                                        </form>
                                    }
                              </div>
                          </div>
                      </div>
                  </div>
              }
          </div>
      }
    }
</div>

@section Scripts
{
    <script type="text/javascript">
        document.addEventListener("DOMContentLoaded", function () {
            var isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
            if (isMobile) {
                showCard();
            }
            else {
                showTable();
            }
        });

        function showTable() {

            var x = document.getElementsByClassName("table");
            var i;
            for (i = 0; i < x.length; i++) {
                x[i].style.display = "table";
            }

            x = document.getElementsByClassName("card");
            for (i = 0; i < x.length; i++) {
                x[i].style.display = "none";
            }
            var btn = document.getElementById("tableBtn");
            btn.className = "bootn active";
            btn = document.getElementById("cardsBtn");
            btn.className = "bootn";
        }

        function showCard() {

            var x = document.getElementsByClassName("table");
            var i;
            for (i = 0; i < x.length; i++) {
                x[i].style.display = "none";
            }

            x = document.getElementsByClassName("card");
            for (i = 0; i < x.length; i++) {
                x[i].style.display = "block";
            }

            var btn = document.getElementById("tableBtn");
            btn.className = "bootn";
            btn = document.getElementById("cardsBtn");
            btn.className = "bootn active";
        }
    </script>
}
